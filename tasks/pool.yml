---
- name: Check if pool exists
  shell: set -o pipefail; zpool list -H | cut -s -f1
  args:
    executable: /bin/bash
  changed_when: false
  register: existing_pools

- name: Create zpool
  shell: >-
    set -o pipefail;
    echo "{{ item.value.passphrase | default('') }}" |
    zpool create -f -o ashift={{ item.value.ashift | default(12) }}
    -O acltype={{ item.value.acltype | default('posixacl') }}
    -O canmount=off
    -O compression={{ item.value.compression | default('lz4') }}
    -O dnodesize={{ item.value.dnodesize | default('auto') }}
    -O normalization={{ item.value.normalization | default('formD') }}
    -O relatime={{ item.value.relatime | default('on') }}
    -O xattr={{ item.value.xattr | default('sa') }}
    {% if item.value.passphrase is defined %}
    -O encryption={{ item.value.encryption | default('aes-256-gcm') }}
    -O keylocation={{ item.value.keylocation | default('prompt') }}
    -O keyformat={{ item.value.keyformat | default('passphrase') }}
    {% endif %}
    {{ item.key }}
    {{ item.value.type | default('') }}
    {% for device in item.value.devices %} {{ device }} {% endfor %}
  args:
    executable: /bin/bash
  when: item.key not in existing_pools.stdout
  with_dict: "{{ zfs_pools }}"
  loop_control:
    label: "{{ item.key }}"
